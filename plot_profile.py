# %%
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from matplotlib.colors import LogNorm

pop_binedges = '0.119552706	0.140894644	0.169068337	0.204226949	0.227523895	0.253291842	0.279285719	0.35426882	0.604151175	0.705102841	0.785877189	1.100686925	1.117622254	1.765832382	2.690129739	3.014558062 4.392791391'
pop_binedges = np.fromstring(pop_binedges, dtype=float, sep="\t")
pop_midbin = (pop_binedges[1:] + pop_binedges[:-1])/2

cda_midbin = '0.475328874	0.476797513	0.478175666	0.479502075	0.480855492	0.482239192	0.483776821	0.485514795	0.487586124	0.490033954	0.493015369	0.49644285	0.500526891	0.504620049	0.508623279	0.512432791	0.516276412	0.519917789	0.523446881	0.526657368	0.529644951	0.532170415	0.534453013	0.536612172	0.538707124	0.540707499	0.542704885	0.544602005	0.546412089	0.548115794	0.54976444	0.551336908	0.552945782	0.5545795	0.556307547	0.558111326	0.560094002	0.56230309	0.564890776	0.567889907	0.571592672	0.576088823	0.581680177	0.588617321	0.601561496	0.630479813	0.676961544	0.710966886	0.735991613	0.756999913	0.775663514	0.795802163	0.817335328	0.834507604	0.851033998	0.86681952	0.883636475	0.904097147	0.945168374	0.987512487	1.00945989	1.024622743	1.037300638	1.04742767	1.055919888	1.062703414	1.067781829	1.071556532	1.074791681	1.07782548	1.081217504	1.085261064	1.090688654	1.099784657	1.101313854	1.134070536	1.209881892	1.226633942	1.276581131	1.281214165	1.299169605	1.401316835	1.41500474	1.488659509	1.499543839	1.530187633	1.612875286	1.666529026	1.676728327	1.692803248	1.697021378	1.743202139	1.774124289	1.79524413	1.845877084	1.860421324	2.020064767	2.022618315	2.088301883	2.15270898	2.166822976	2.19656516	2.196871589	2.366985679	2.567716135	2.713412113	3.023724973	3.116313593	3.258662351	3.499997015	3.560935854	3.656816689	3.701894939	4.128937642	4.246310184	4.294054709	4.442235484	4.449948153	4.653026664	4.653982923	4.67225491	4.861758846	5.128331636	5.178882979	5.3989097	5.488764992	5.697755771	5.796959675	5.849201526	5.861379666	6.181802879	6.234781395	6.270167934	6.456362015	6.664095866	6.818273185	7.045264319	7.199039758	7.744351806	8.149762235	8.389541055	9.106277016	9.376108012	9.458106894	9.720177509	9.891769321	9.893218147	10.08342955	11.13544922	11.3674229	11.97956261	12.05205985	12.13275325	12.52580911	12.65504996	12.74203407	13.5130931	13.60890061	14.00643198	14.01971045	14.62845349	14.68718025	15.08350885	15.08634042	15.26579923	15.48530688	15.78181646	15.87183591	15.88837124	15.99151022	16.21562139	16.3392285	17.09296412	17.30950528	17.49875152	17.91853132	18.81127331	18.88275366	19.49931861	20.50310055	20.67596729	21.43256304	21.66692463	22.38056288	22.41687813	23.32114574	23.59800118	24.6884587	26.15910161	26.40985223	26.54907612	26.82122253	27.95378788	28.31828571	28.62308926	28.9859605	31.70831679	33.30483755	33.31872983	33.47237149	33.83613691	34.14117219	34.29535607	35.96238407	36.45040779	36.96988842	39.31445632	39.80082648	39.97625745	40.4735219	41.12239047	41.36883415	41.44721931	42.14962289	43.5535701	44.66132244	45.18348652	45.4997003	45.62804903	46.07948013	47.22685994	47.31823406	48.04153067	50.09042257	51.10002286	51.70165447	54.88557633	54.89575025	56.84483279	57.63884448	59.89426308	62.48060031	65.02975953	65.31940219	66.72726474	66.93637203	68.96794765	70.10028923	73.92440633	74.13015358	74.791476	78.61039438	81.12774565	81.78167273	84.31901307	87.67904454	87.73430049	88.07791102	88.92650157	89.09216846	89.90121531	90.14220699	93.09415699	94.34675245	95.23367622	99.56794522'

cda_midbin = np.fromstring(cda_midbin, dtype=float, sep="\t")

data_path = r'C:\Users\le\OneDrive - Ilmatieteen laitos\Campaigns\Pace2022\FMI balloon payload\Processed_data/'
df = pd.read_csv(data_path + 'FMI.TBS.a1.20220918.0620.csv')
df['datetime (utc)'] = pd.to_datetime(df['datetime (utc)'])
df = df.loc[df['datetime (utc)'] < pd.Timestamp('20220918 0800+0000')]
df.replace(-9999.9, np.nan, inplace=True)
df.dropna(subset=['press_bme (hPa)'], inplace=True)
df = df.set_index('datetime (utc)').resample('1min').mean().reset_index()
df.sort_values('press_bme (hPa)', inplace=True)
df.reset_index(drop=True, inplace=True)
# %%
fig, ax = plt.subplots(1, 5, figsize=(10, 4), sharey=True, constrained_layout=True)
ax[0].plot(df['temp_bme (C)'], df['press_bme (hPa)'], '.')
ax[1].plot(df['rh_bme (%)'], df['press_bme (hPa)'], '.')
ax[2].plot(df['N_conc_cpc(cm-3)'], df['press_bme (hPa)'], '.')
ax[3].pcolormesh(pop_midbin, df['press_bme (hPa)'],
                 df[[x for x in df.columns if '_pops (dN/dlogDp)' in x]],
                 norm=LogNorm(vmax=10, vmin=0.01), 
                 shading='nearest', cmap='jet')
p = ax[4].pcolormesh(cda_midbin, df['press_bme (hPa)'],
                 df[[x for x in df.columns if '_mcda (dN/dlogDp)' in x]],
                 norm=LogNorm(vmax=10, vmin=0.01),
                 shading='nearest', cmap='jet')
ax[3].set_xscale('log')
ax[4].set_xscale('log')
ax[0].invert_yaxis()
fig.colorbar(p, ax=ax, label=r'dN/dlogDp ($cm^{-3}$)')

# %%
